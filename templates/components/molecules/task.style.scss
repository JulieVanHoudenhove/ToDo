.uncomplete {
  transition: 0.8s;
  div {

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-top: 25px;
    cursor: pointer;

    div {

      margin-top: 0;

      h2 {
        color: var(--dark-gray);
        font-weight: var(--font-weight-medium);
        font-size: var(--font-size-h2);
        line-height: var(--font-line-height-h2);
        margin-left: 10px;
      }
    }
    form {

      padding: 0;
      margin: 0;

      button {
        color: var(--gray);
        text-decoration: none;
        font-size: var(--font-size-button);
        margin-top: 5px;
        height: 19px;
      }
    }

  }
  .details {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin: 5px 0 15px 0;

    p {
      font-weight: var(--font-weight-semi-bold);
      font-size: var(--font-size-p);
      color: var(--gray);
    }
  }
}

.complete {
  transition: 0.8s;
  div {

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-top: 25px;
    cursor: pointer;

    div {

      margin-top: 0;

      h2 {
        color: var(--gray);
        font-weight: var(--font-weight-medium);
        font-size: var(--font-size-h2);
        line-height: var(--font-line-height-h2);
        margin-left: 10px;
      }
    }
    form {

      padding: 0;
      margin: 0;

      button {
        color: var(--dark-gray);
        text-decoration: none;
        font-size: var(--font-size-button);
        margin-top: 5px;
        height: 19px;
      }
    }
  }

  .details {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin: 5px 0 15px 0;

    p {
      font-weight: var(--font-weight-semi-bold);
      font-size: var(--font-size-p);
      color: var(--gray);
    }
  }

}
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkbox-wrapper-13 input[type=checkbox] {
    --active: var(--purple);
    --active-inner: #fcfcfc;
    --focus: var(--dark-purple);
    --border: var(--gray);
    --border-hover: var(--purple);
    --background: var(--gray);
    --disabled: var(--light);
    --disabled-inner: var(--light-gray);
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 24px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }

  .checkbox-wrapper-13 input[type=checkbox]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
  }

  .checkbox-wrapper-13 input[type=checkbox]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
  }

  .checkbox-wrapper-13 input[type=checkbox]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }

  .checkbox-wrapper-13 input[type=checkbox]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }

  .checkbox-wrapper-13 input[type=checkbox]:disabled + label {
    cursor: not-allowed;
  }

  .checkbox-wrapper-13 input[type=checkbox]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }

  .checkbox-wrapper-13 input[type=checkbox]:focus {
    box-shadow: 0 0 0 var(--focus);
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
    width: 24px;
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
    opacity: var(--o, 0);
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
    --o: 1;
  }

  .checkbox-wrapper-13 input[type=checkbox] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch) {
    border-radius: 7px;
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 9px;
    top: 5px;
    transform: rotate(var(--r, 20deg));
  }

  .checkbox-wrapper-13 input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
  }
}

.checkbox-wrapper-13 * {
  box-sizing: inherit;
}

.checkbox-wrapper-13 *:before,
.checkbox-wrapper-13 *:after {
  box-sizing: inherit;
}